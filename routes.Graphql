//RENDER DEPLOYMENT
https://cse341-family-information-winter-2024.onrender.com/Graphql

# ROUTES.GraphQL
 
// INDIVIDUALS COLLECTION
 
# GraphQL Query to Retrieve All Individuals from the Individuals collection
 
query GetAllIndividuals {
individuals{
    _id
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
 
### Query to retrieve one individual by ID
 
query IndividualByID {
  individual(id: "65ef74ae7c211814c571e01b") {
    _id
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
 
### Query to retrieve one individual by name
 
query IndividualByName {
  individualByName(firstName: "Rhianon") {
    _id
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
 
### Mutation to add a new individual to the collection
 
# Query to Add a new individual to the collection
mutation  {
  createIndividual(
    firstName: "Elie",
    middleName: "Fake",
    lastName: "Mambou",
    birthDate: "2000-01-01",
    parents:[
          "65f1dc20a082e7bd594edca2",
          "65f1dc78a082e7bd594edca3"
        ],
    phone: "123-342-1234",
    email: "fakeindividual@gmail.com",
    household: "",
    headOfHousehold: true,
    picture: "none"
    )
  {
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
 
# Query to update an existing individual information
 
mutation UpdateIndividual {
  updateIndividual(
    id: "66144fb8ec8a06c342af561c",
    firstName: "Pierrette",
    middleName:"Bart Etienne",
    lastName: "Doe"
    birthDate: "988-01-01",
    parents: ["65fa5e1215cb7d3de3ff079a",
      "65fa5e5f15cb7d3de3ff079c"],
    phone: "830-345-9833",
    email:"johnDoe@byui.edu",
    household: "",
    headOfHousehold: true,
    picture:"none")
 
  {
    _id
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
# Query to delete an existing individual from the collection
 
mutation DeleteIndividual {
  deleteIndividual(id: "65f1dc20a082e7bd594edca2") {
  _id
    firstName
    middleName
    lastName
    birthDate
    parents
    phone
    email
    household
    headOfHousehold
    picture
  }
}
 
 
 
 
// HOUSHEHOLDS COLLECTION
 
# GraphQL Query to Retrieve All households
 
query {
  households {
    _id
    streetAddress
    city
    state
    zip
    country
    headOfHousehold
    residents
  }
}
 
 
# GraphQL Query to Retrieve an household by Id
 
query householdById {
  household(id: "65f9197e78c0a979ea81a186") {
    _id
    streetAddress
    city
    state
    zip
    country
    headOfHousehold
    residents
  }
}
 
 
# GraphQL Query to create a new household to the collection
 
mutation {
  createHousehold(
    streetAddress: "123 Main St",
    city: "Anytown",
    state: "CA",
    zip: "12345",
    country: "United States",
    headOfHousehold: ["65fc9426fc13ae5d6a50fa9d", "65fc9426fc13ae5d6a50fa9f"],
    residents: ["65fc9426fc13ae5d6a50fa9d", "65fc9426fc13ae5d6a50fa9f", "65fc9426fc13ae5d6a50faa1"]
  ) {
    _id
    streetAddress
    city
    state
    zip
    country
    headOfHousehold
    residents
  }
}
 
 
 
# GraphQL Query to update an existing household
 
mutation UpdateHousehold {
  updateHousehold(
     id: "661451ccec8a06c342af5624",
    streetAddress: "",
    city: "290 Zion Street",
    state: "Salt Lake",
    zip: "85090",
    country: "United States",
    headOfHousehold:
       [
          "65f2162017c8cc6b12754e5e",
          "65f2166117c8cc6b12754e5f"
        ],
    residents:  [
      "65f2162017c8cc6b12754e5e",
      "65f2166117c8cc6b12754e5f",
      "65f59e49db24e761d695d77e"
    ]  ) {
   
    _id
    streetAddress
    city
    state
    zip
    country
    headOfHousehold
    residents
  }
}
 
 
### Query to delete an existing household from the collection
 
mutation {
  deleteHousehold(id: "661451ccec8a06c342af5624") {
    _id
    streetAddress
    city
    state
    zip
    country
    headOfHousehold
    residents
  }
}
 
 
 
 
// ANNIVERSARIES COLLECTION
 
 
# GraphQL Query to Retrieve All anniversaries
 
query {
  anniversaries {
    _id
    couple
    anniversaryDate
  }
}
 
 
# Query to get anniversary by Id
 
query {
  anniversaryById(id: "65f1dccaa082e7bd594edca4") {
    _id
    couple
    anniversaryDate
  }
}
 
 
 
# GraphQL Query to create a new anniversary to the anniversaries collection
 
mutation {
  createAnniversary(
    couple: ["65fc9426fc13ae5d6a50fa9c", "65fc9d58fc13ae5b6c50fb00"],
    anniversaryDate: "1997-01-13"
  ) {
    _id
    couple
    anniversaryDate
  }
}
 
 
 
# GraphQL Query to UPDATE an exisint anniversary from the anniversaries collection
 
mutation {
  updateAnniversary(
    id: "661453723295dce74e342c69",
    couple: ["65f1dc20a082e7bd594edca2", "65f601bc4abde303e77e19e4"],
      anniversaryDate: "1999-01-01"
    )
  {
    _id
    couple
    anniversaryDate
  }
}
 
 
 
# GraphQL Query to DELETE an exisint anniversary from the anniversaries collection
 
mutation {
 deleteAnniversary (id: "661453723295dce74e342c69")
  {
 _id
couple
anniversaryDate
}
}
 
 
 
 
// NEWS COLLECTION
 
# GraphQL Query to retrieve all news from the news collection
 
query {
    news {
        _id
        newsTitle
        newsBody
        status
        postedBy
        dateCreated
        picture
    }
}
 
 
 
# GraphQL Query to find news by id from the news collection
 
query {
  newsById(id: "65f35c28b182f34a3d33374c") {
    _id
    newsTitle
    newsBody
    status
    postedBy
    dateCreated
    picture
  }
}
 
 
# GraphQL Query to create news to the news collection
 
mutation {
    createNews(
        newsTitle: "New News Title",
        newsBody: "New News Body Content",
        status: "public",
        postedBy: "65f34f8191f613164d933bb1",
        dateCreated: "2024-03-30",
        picture: "https://example.com/image.jpg"
    ) {
        _id
        newsTitle
        newsBody
        status
        postedBy
        dateCreated
        picture
    }
}
 
 
# GraphQL Query to UPDATE an existing news from the news collection
 
mutation {
  updateNews(
    id: "65f368ef9d5d7518becdb4f0"
    newsTitle: "Updated News Title"
    newsBody: "This is the most exciting news around"
    status: "public"
  ) {
    _id
    newsTitle
    newsBody
    status
    postedBy
    dateCreated
    picture
  }
}
 
 
# GraphQL Query to DELETE an exisint news from the news collection
 
mutation {
    deleteNews(id: "661454543295dce74e342c72") {
        _id
        newsTitle
        newsBody
        status
        postedBy
        dateCreated
        picture
    }
}
 