{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Family Information API",
    "description": "This is a family information app created by team d for the CSE341 team project assignment",
    "contact": {
      "name": "CSE 341 Team D",
      "url": "https://github.com/ajrobbins04/cse341-family_information"
    }
  },
  "servers": [
    {
      "url": "https://cse341-family-information-winter-2024.onrender.com/",
      "description": "Render website"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/profile": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Profile",
        "description": "This will return the user profile information for the current authenticated user.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/individuals/getAllIndividuals": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get all individuals",
        "description": "This will return all the individuals in the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/individuals/getSingleIndividual/{id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get an individual by Id",
        "description": "This will return an individual by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/individuals/": {
      "post": {
        "tags": [
          "Individuals"
        ],
        "summary": "Create a new Individual to the collection",
        "description": "Create an Individual by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "any"
                  },
                  "middleName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "birthDate": {
                    "example": "any"
                  },
                  "parents": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "household": {
                    "example": "any"
                  },
                  "headOfHousehold": {
                    "example": "any"
                  },
                  "picture": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/individuals/{id}": {
      "put": {
        "tags": [
          "Individuals"
        ],
        "summary": "Update an existing Individual by Id",
        "description": "Update an existing individual by providing all required information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Individuals"
        ],
        "summary": "Delete an Individual by Id",
        "description": "This will delete a single individual from the database by Id. This action is permanent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/getall": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get all Households",
        "description": "This will list all households in the database",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/getbyid/{id}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its ID",
        "description": "Returns a single household by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/getbyhoh/{hoh}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its head of household",
        "description": "Returns a single household by the head of the household",
        "parameters": [
          {
            "name": "hoh",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/getbyaddress/{street}/{city}/{state}/{zip}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its address",
        "description": "Returns a single household by its address",
        "parameters": [
          {
            "name": "street",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/createhousehold": {
      "post": {
        "tags": [
          "Households"
        ],
        "summary": "Create a Household",
        "description": "Create a Household by providing all required information.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "streetAddress": "Test Street",
                "city": "Rexburg",
                "state": "ID",
                "zip": "83440",
                "country": "United States",
                "headOfHousehold": [
                  "65f2162017c8cc6b12754e5e",
                  "65f2166117c8cc6b12754e5f"
                ],
                "residents": [
                  "65f2162017c8cc6b12754e5e",
                  "65f2166117c8cc6b12754e5f",
                  "65f59e49db24e761d695d77e"
                ]
              }
            }
          }
        }
      }
    },
    "/household/updatehousehold/{id}": {
      "put": {
        "tags": [
          "Households"
        ],
        "summary": "Update a Household by its ID",
        "description": "Update an existing household by providing all required information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "streetAddress": "123 Jeans Street",
                "city": "Rexburg",
                "state": "ID",
                "zip": "83440",
                "country": "United States",
                "headOfHousehold": [
                  "65f2162017c8cc6b12754e5e",
                  "65f2166117c8cc6b12754e5f"
                ],
                "residents": [
                  "65f2162017c8cc6b12754e5e",
                  "65f2166117c8cc6b12754e5f",
                  "65f59e49db24e761d695d77e"
                ]
              }
            }
          }
        }
      }
    },
    "/household/deletehousehold/{id}": {
      "delete": {
        "tags": [
          "Households"
        ],
        "summary": "Delete a household by its ID",
        "description": "Permanently delete a household by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/anniversaries/getall": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get all Anniversaries",
        "description": "This will list all anniversaries in the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/anniversaries/getbyid/{id}": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get a single anniversary by anniversary Id",
        "description": "This will return a single anniversary in the database by anniversary Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/anniversaries/getbymonth/{month}": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get anniversaries by month",
        "description": "This will return a list of anniversaries that occur in the specified month",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/anniversaries/createanniversary": {
      "post": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Create an Anniversary",
        "description": "Create an Anniversary by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "couple": [
                  "individualId1",
                  "individualId2"
                ],
                "anniversaryDate": "2020-06-30"
              }
            }
          }
        }
      }
    },
    "/anniversaries/updateanniversary/{id}": {
      "put": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Update an Anniversary by Id",
        "description": "Update an existing anniversary by providing the anniversaryId and the updated information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "couple": [
                  "individualId1",
                  "individualId2"
                ],
                "anniversaryDate": "2020-06-30"
              }
            }
          }
        }
      }
    },
    "/anniversaries/deleteanniversary/{id}": {
      "delete": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Delete an Anniversary by Id",
        "description": "This will delete a single anniversary from the database by Id. This action is permanent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/news/getall": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all News Stories",
        "description": "This will return all the news stories in the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/news/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get Single News Story by newsId",
        "description": "This will return a single news story by news Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/news/author/{postedBy}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get News by Author",
        "description": "This will return all news stories with postedBy matching the provided individualId",
        "parameters": [
          {
            "name": "postedBy",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/news/status/{status}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get News by Status",
        "description": "This will return all news stories with status matching the requested status of ",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/news/createnews": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create a News Story",
        "description": "Create a news story by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "412": {
            "description": "Precondition Failed"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newsTitle": "News Title",
                "newsBody": "News paragraphs",
                "status": "public",
                "postedBy": "IndividualId",
                "dateCreated": "YYYY-MM-DD",
                "picture": "URL of picture"
              }
            }
          }
        }
      }
    },
    "/news/updatenews/{id}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update a News Story by Id",
        "description": "Update an existing news story by providing all required information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "412": {
            "description": "Precondition Failed"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newsTitle": "News Title",
                "newsBody": "News paragraphs",
                "status": "public",
                "postedBy": "IndividualId",
                "dateCreated": "YYYY-MM-DD",
                "picture": "URL of picture"
              }
            }
          }
        }
      }
    },
    "/news/deletenews/{id}": {
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a News Story by Id",
        "description": "This will delete a single news story from the database by Id. This action is permanent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lookup/parents/{id}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Get parents",
        "description": "This will return a list of parents for the individual id provided.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lookup/children/{parentId}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Get children",
        "description": "This will return a list of individuals with the provided parentId listed in the parents array.",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/lookup/grandchildren/{grandparentId}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "summary": "Get grandchildren",
        "description": "This will return a list of individuals who are grandchildren of the provided grandparentId.",
        "parameters": [
          {
            "name": "grandparentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/lookup/birthdays": {
      "get": {
        "tags": [
          "Birthdays"
        ],
        "summary": "Get all birthdays",
        "description": "This will return the full names of all individuals in the database sorted by birth month and date along with their date of birth and the age of the individual as of today",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/lookup/birthdays/{month}": {
      "get": {
        "tags": [
          "Birthdays"
        ],
        "summary": "Get birthdays by month",
        "description": "This will return the full names of all individuals in the database born in the specified month along with their date of birth and the age of the individual as of today",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/lookup/mailingLabels": {
      "get": {
        "tags": [
          "Mailing Labels"
        ],
        "summary": "Get Mailing Labels",
        "description": "This will return the full names of all individuals in the database with their mailing address.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}